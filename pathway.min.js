function makePathway(r,t){"use strict";function e(r,e){var n=i(e);return function(e){if("."===e)return r;var o,a=e.match(/^((@[^\/]*)?\/?)(.*)$/)||[],i=a[2],f=a[3];if(i){if("function"!=typeof t[i]){if(i.substr(1)in t)return t[i.substr(1)];throw new Error("Pathway: Failed to import library: "+e+" from "+n)}o=t[i](f,n)}else o=s(f,n);if("In Progress"===o)throw new Error("Pathway: Circular import between: "+n+" and "+(e||"/"));return o}}function n(r,t){var n,s,u,c=f.$$(r);if(void 0===c)throw new Error("Pathway: Failed to import package: '"+i(r)+"'"+(t?" from: "+t:""));if(c instanceof Array){n=c,c={},f.$$(r,"In Progress"),s=o(c);for(var w=0,h=n.length;h>w;w++)switch(u=n[w](e(s,r),s),typeof u){case"object":a(c,u,i(r));break;case"undefined":break;default:throw new Error("Pathway: Invalid export: '"+u+"' from "+i(r))}f.$$(r,c)}return c}function o(r){function t(){}return t.prototype=r,new t}function a(r,t,e){if(r&&t){var n,o;for(n in t){if(r.hasOwnProperty(n))throw o=new Error("Pathway: Key conflict: '"+n+"'"),e&&(o.message+=" at "+e),o;r[n]=t[n]}return r}}function i(t){return"@"+r+"/"+t.replace(/^\//,"")}var f={$$:function(r,t){return"/"===r&&(r=""),void 0===t?this["~"+r]:this["~"+r]=t}},s=t["@"+r]=function(r,t,e){var o,a,s="/";switch(typeof r){case"string":s=r,o=t,a=e;break;case"function":o=r,a=t}var u=f.$$(s);if("function"==typeof o){if(void 0===u&&(u=f.$$(s,[])),!(u instanceof Array))throw new Error("Pathway: Package "+i(s)+" has already been initialized."+(a?" (from "+a+")":""));u.push(o)}else a=t,n(s,a);return"In Progress"===(u=f.$$(s))?"In Progress":u};return s["import"]=s,s}